# https://marclop.svbtle.com/creating-an-automated-centos-7-install-via-kickstart-file
# Install CentOS 7 manually using the GUI, then copy the resulting installation file located under /root/anaconda-ks.cfg
# That becomes the basis for this file.

#version=DEVEL
# System authorization information
auth --enableshadow --passalgo=sha512
# Use CDROM installation media
cdrom
# Use graphical install
graphical
# Run the Setup Agent on first boot
firstboot --enable
ignoredisk --only-use=sda
# Keyboard layouts
keyboard --vckeymap=us --xlayouts='us'
# System language
lang en_US.UTF-8

# Network information
network --bootproto=dhcp --device=ens192 --onboot yes --ipv6=auto --activate
network --bootproto=dhcp --hostname={{ hostname }}

# Root password
rootpw --iscrypted {{ root_password }}
# System services
services --enabled="chronyd"
# System timezone
timezone {{ timezone }}
user --groups=wheel --name={{ user_name }} --password={{ user_password }} --iscrypted --gecos="{{ user_name }}"
# System bootloader configuration
bootloader --append=" crashkernel=auto" --location=mbr --boot-drive=sda
autopart --type=lvm
# Partition clearing information
clearpart --none --initlabel

%post --log=/root/kickstart-post.log

# Passwordless sudo
echo '%wheel ALL=(ALL) NOPASSWD: ALL' | sudo EDITOR='tee -a' visudo

# Get files off the floppy and perform any needed actions.
mkdir /media/floppy
mount /dev/fd0 /media/floppy
# mkdir /etc/pki/ca-trust/custom
# cp /media/floppy/internal_ca.pem /etc/pki/ca-trust/custom/
# chmod 644 /etc/pki/ca-trust/custom/*
# cp /etc/pki/ca-trust/custom/internal_ca.pem /etc/pki/ca-trust/source/anchors/
# update-ca-trust
umount /dev/fd0

{% if artifactory is not none %}
# Fix up the repos to point to proxies on Artifactory.
sed -i 's/^metalink/#metalink/g' /etc/yum.repos.d/*.repo
sed -i 's/^mirrorlist/#mirrorlist/g' /etc/yum.repos.d/*.repo
sed -i 's/^#baseurl/baseurl/g' /etc/yum.repos.d/*.repo
sed -i 's;http://mirror.centos.org;https://{{ artifactory }}/artifactory/mirror.centos.org;g' /etc/yum.repos.d/*.repo
sed -i 's;http://buildlogs.centos.org;https://{{ artifactory }}/artifactory/buildlogs.centos.org;g' /etc/yum.repos.d/*.repo
sed -i 's;http://debuginfo.centos.org;https://{{ artifactory }}/artifactory/debuginfo.centos.org;g' /etc/yum.repos.d/*.repo
sed -i 's;http://download.fedoraproject.org;https://{{ artifactory }}/artifactory/download.fedoraproject.org;g' /etc/yum.repos.d/*.repo
sed -i 's;http://vault.centos.org;https://{{ artifactory }}/artifactory/vault.centos.org;g' /etc/yum.repos.d/*.repo
{% endif %}

# Install some additional repositories. https://wiki.centos.org/AdditionalResources/Repositories/SCL
yum install epel-release -y
yum install centos-release-scl -y

{% if artifactory is not none %}
# Fix up the repos to point to proxies on Artifactory.
sed -i 's/^metalink/#metalink/g' /etc/yum.repos.d/*.repo
sed -i 's/^mirrorlist/#mirrorlist/g' /etc/yum.repos.d/*.repo
sed -i 's/^#baseurl/baseurl/g' /etc/yum.repos.d/*.repo
sed -i 's;http://mirror.centos.org;https://{{ artifactory }}/artifactory/mirror.centos.org;g' /etc/yum.repos.d/*.repo
sed -i 's;http://buildlogs.centos.org;https://{{ artifactory }}/artifactory/buildlogs.centos.org;g' /etc/yum.repos.d/*.repo
sed -i 's;http://debuginfo.centos.org;https://{{ artifactory }}/artifactory/debuginfo.centos.org;g' /etc/yum.repos.d/*.repo
sed -i 's;http://download.fedoraproject.org;https://{{ artifactory }}/artifactory/download.fedoraproject.org;g' /etc/yum.repos.d/*.repo
sed -i 's;http://vault.centos.org;https://{{ artifactory }}/artifactory/vault.centos.org;g' /etc/yum.repos.d/*.repo
{% endif %}

# Update the system.
yum update -y

# Install basic programs.
yum install vim nano wget python git ansible sclo-git212 rh-python36 python2-pip open-vm-tools unzip -y
# Cleanup
yum clean all
# These next commands are needed to enable communication from the controlling Ansible machine.
# Create the root ssh directory.
mkdir /root/.ssh
chmod 700 /root/.ssh
# Create the root authorized_keys file.
echo "{{ ssh_pub }}" > /root/.ssh/authorized_keys
chmod 600 /root/.ssh/authorized_keys
# Create the {{ user_name }} ssh directory.
mkdir /home/{{ user_name }}/.ssh
chmod 700 /home/{{ user_name }}/.ssh
chown {{ user_name }}:{{ user_name }} /home/{{ user_name }}/.ssh
# Create the {{ user_name }} authorized_keys file.
echo "{{ ssh_pub }}" > /home/{{ user_name }}/.ssh/authorized_keys
chmod 600 /home/{{ user_name }}/.ssh/authorized_keys
chown {{ user_name }}:{{ user_name }} /home/{{ user_name }}/.ssh/authorized_keys
%end

%packages
@^minimal
@core
chrony
kexec-tools
openscap
openscap-scanner
scap-security-guide
sudo
%end

%addon org_fedora_oscap
    content-type = scap-security-guide
    profile = xccdf_org.ssgproject.content_profile_docker-host
%end

%addon com_redhat_kdump --enable --reserve-mb='auto'

%end

%anaconda
pwpolicy root --minlen=6 --minquality=50 --notstrict --nochanges --notempty
pwpolicy user --minlen=6 --minquality=50 --notstrict --nochanges --notempty
pwpolicy luks --minlen=6 --minquality=50 --notstrict --nochanges --notempty
%end

# Reboot after installation
reboot
